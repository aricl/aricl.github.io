/**
 * jquery.EditBudget
 *
 * Defines client-side behaviour for editing budget amounts
 *
 * @author Robert Corley
 *
 */

;(function( $ ){
    var methods = {

        /**
         * Setup
         *
         * Defines client side behaviour for the edit budget table. Saves schedule
         * percentages for each cell to td.data() and then calculates the amounts
         * for each schedule using the percentages. Also attaches the handler for
         * updating the schedule amounts when the budget amount is edited.
         *
         *
         */
        setup : function( site_id, budget_id ) {
            var oTable = $(document).Table();

            // Add fixed-total class to rows which have a total in them already
            oTable.$('tr').each(function(){
                var tr = $(this);
                var total = tr.find('td').eq(1).html();
                if (total != 0.00) {
                    tr.addClass('fixed-total');
                }
            });

            oTable.EditBudget('budget_amount_totals');

            content_box = oTable.parentsUntil('.content-box').parent();
            content_box.on('editable-edited',function(e){
                var oTable = $(document).Table();
                oTable.EditBudget('budget_amount_totals');
            });

            return $(this);
        },

        /**
         * Budget Amount Totals
         *
         * Calculates the total amount in each row and displays it in the total
         * column and also calculates a grand total and puts this in the <th> for
         * the total column.
         *
         */
        budget_amount_totals : function() {
            var oTable = this.Table();
            var grand_total = 0;
            oTable.$('tr').each(function(){
                var tr = $(this);
                if ( ! tr.hasClass('fixed-total')) {
                    var total = tr.Table('row_total', [0,1]);
                    grand_total += total;
                    total = total.format('0,000.00');
                    $(tr.children()[1]).html(total);
                // Fixed total for row, so highlight if amounts don't add up
                } else {
                    var total = tr.Table('row_total', [0,1]);
                    var fixedTotal = Number(tr.find('td').eq(1).html().replace(/,/, ''));
                    if (Math.abs(fixedTotal - total) > 0.001) {
                        tr.addClass('red');
                    } else {
                        tr.removeClass('red');
                    }
                    grand_total += fixedTotal;
                }
            });
            var ths = oTable.parent().prev().find('thead tr').children();
            ths.eq(1).html('<span>Grand Total: ' + grand_total.format('0,000.00') + '</span><br>Total');
            return $(this);
        }

    };

    /**
     * Setup method handler
     */
    $.fn.EditBudget = function( method ) {
        if ( methods[method] ) {
            return methods[ method ].apply( this, Array.prototype.slice.call( arguments, 1 ));
        } else if ( typeof method === 'object' || ! method ) {
            return methods.init.apply( this, arguments );
        } else {
            $.error( 'Method ' +  method + ' does not exist on jQuery.Budget' );
        }
    };
})( jQuery );
